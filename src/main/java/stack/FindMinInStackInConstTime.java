package stack;import java.util.Scanner;import java.util.Stack;public class FindMinInStackInConstTime {    public static void main(String[] args) throws Exception {        Scanner sc = new Scanner(System.in);        int n = sc.nextInt();        int[] a = new int[n];        for (int i = 0; i < n; i++) {            a[i] = sc.nextInt();        }        System.out.println((getMin(a)));    }    public static int getMin(int[] a){        Stack<Integer> stack = new Stack<Integer>();        Stack<Integer> minStack = new Stack<Integer>();        stack.push(a[0]);        minStack.push(a[0]);        int min = a[0];        for (int i = 1; i < a.length; i++) {            stack.push(a[0]);            if(min <= minStack.peek() )                minStack.push(min);            else                minStack.push(a[i]);        }        return minStack.peek();    }}