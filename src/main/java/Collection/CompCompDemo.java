package Collection;import java.util.Comparator;import java.util.TreeSet;class Employee implements Comparable {    String name;    int id;    public Employee(String name, int id) {        this.name = name;        this.id = id;    }    @Override    public String toString() {        return  name + "---" + id;    }    @Override    public int compareTo(Object o2) {        int id1 = this.id;        Employee e2 = (Employee) o2;        int id2 = e2.id;        if(id1< id2)            return -1;        else if (id1 > id2)            return 1;        else            return 0;    }}public class CompCompDemo {    public static void main(String[] args) {        Employee e1 = new Employee("Arpan",100);        Employee e2 = new Employee("Raj",50);        Employee e3 = new Employee("Nishant",70);        Employee e4 = new Employee("Pankaj",90);        Employee e5 = new Employee("Arpan",100);        TreeSet t = new TreeSet();        t.add(e1);        t.add(e2);        t.add(e3);        t.add(e4);        t.add(e5);        System.out.println(t);        TreeSet t1 = new TreeSet(new CustomComparator());        t1.add(e1);        t1.add(e2);        t1.add(e3);        t1.add(e4);        t1.add(e5);        System.out.println(t1);    }}class CustomComparator implements Comparator{    @Override    public int compare(Object o1, Object o2) {        Employee e1 = (Employee) o1;        Employee e2 = (Employee) o2;        String s1 = e1.name;        String s2 = e2.name;        return s1.compareTo(s2);    }}